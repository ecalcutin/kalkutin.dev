server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl reuseport;
    listen [::]:443 ssl reuseport;

    # Domain names this server should respond to.
    server_name kalkutin.dev www.kalkutin.dev;

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/kalkutin.dev/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/kalkutin.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/kalkutin.dev/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    font/woff
    font/woff2
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

    location / {
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass http://website:8080;
    }
}

# server {
#     # Listen to port 443 on both IPv4 and IPv6.
#     listen 443 ssl;
#     listen [::]:443 ssl;

#     # Domain names this server should respond to.
#     server_name vpn.kalkutin.dev;

#     # Load the certificate files.
#     ssl_certificate         /etc/letsencrypt/live/vpn.kalkutin.dev/fullchain.pem;
#     ssl_certificate_key     /etc/letsencrypt/live/vpn.kalkutin.dev/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/vpn.kalkutin.dev/chain.pem;

#     # Load the Diffie-Hellman parameter.
#     ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

#     location / {
#         proxy_pass http://wireguard:51821/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }
# }